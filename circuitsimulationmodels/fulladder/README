fulladder: A WARPED simulation kernel application

In this applicaiton, a fulladder is simulated by connecting AND, OR, XOR gates and 
input, output files together. The schematic of the fulladder is  shown in fulladderschematic. 


The class structure of the fulladder application is as follows:
------------------------------------------------------------------------------------

-- The SimulationObject class is the base class for all simulationobjects 
   including AND,OR,XOR gates and FileReaderWriter in this application. 

   
	 SimulationObject-
	                  |
	                   -LogicComponent-
                    |                 |
                    |                  - NInputGate -
                    |                                |
                    |                                 - NInputAndGate
 				    				|						                      - NInputOrGate
				    				 -FileReaderWriter					      - NInputXorGate


-- LogicEvent is the application event class derived from DefaultEvent.

   DefaultEvent - 
	               |
                  - LogicEvent

-- FileSate and NInputGateState class derive from FlatState.

   FlateState - 
	             |
	              -FileSate
							 |
							  -NInputGateState

-- FullAdderApplication connects all necessary gates together to form the fulladder 
   circuit.It's derived from Application class. 

   Application-
	             |
							  -FullAdderApplication


Configuration file
--------------------------------------------------------------------------------------

The configuration file for this application is the FullAdder. In this file, properties 
of every simulation object are specified so that the application can build the fulladder 
based on the information. Details are shown as follow:

--For constructing a gate, the following properties of the gate need to be specified:
   
	(1)the name of the gate.
	(2)the number of inputs of the gate.
	(3)the number of objects including gates and FileReaderWriter it connects.
  (4)names of objects in (3). 
  (5)the input port id of objects in (3). 
  (6)the delay of this object.
  
	e.g.: XOR1 2 2 XOR2 AND2 2 2 1
	 
--For constructing a FileReaderWriter, the following properties of the object need to be 
  specified:

	(1)the name of the file (full path).
  (2)the number of gates the file connects to.
	(3)indicating the file property: input file or output file.
	(4)the input port id of gates in (2).
	(5)names of gates in (2).
	(6)lines in the file the FileReaderWriter will processed. 

	e.g.: circuitsimulationmodels/fulladder/iofiles/CarryIn 2 I 1 1 XOR2 AND2 8

--The number of gates and FileReaderWriters need to be specified seperately.  


Application execution and results 
-----------------------------------------------------------------------------------------

--Using the following command to run the program:
  
  ~/pdes/warped/simulationmodels$ ./fulladderSim -configuration sequential.config 
	-simulate circuitsimulationmodels/fulladder/FullAdder

--The input files are CarryIn, inputA and inputB. 0,1 bits stream are given in input files. 
  The fulladder simulation results will be written in CarryOut and Sum. All files are in iofiles 
	directory.  



