#!/bin/bash
#
# This script reads the communication setup information
# from the configuration file provided to setup the necessary
# command line information for running in MPI. 
#
# In the future, it may be modified to also start applications
# on remote hosts that then communicate through TCP. At this
# time, the command given is all that is run when using TCP.


# Get the command line arguments.
# Check if there is an application provided.
args=("$@")
COM=${args[@]}
NUMARGS=${#args[@]}

# Check if a proper program is specified.
if [ -n "${args[0]}" ]; then
  if [ "${args[0]:0:2}" != "./" ]; then
    # End the script.
    echo "Usage: ./warpedexec [PROGRAM] [OPTIONS] ..."
    echo "You must specify a program to execute."
    exit
  fi
else
  # End the script.
  echo "Usage: ./warpedexec [PROGRAM] [OPTIONS]..."
  echo "You must specify a program to execute."
  exit
fi


# Read the configuration filename from the command line.
# If none is provided run the default configuration.
let n=0
FILENAME=""

while [ $n -lt $NUMARGS ]; do
  if [ "${args[${n}]}" = "-configuration" ]; then
    ((n++))
    FILENAME=${args[${n}]}
  else
    ((n++))
  fi
done

# If no configuration file is provided then no parsing needs
# to occur. Just run the commands provided with the default 
# configuration.
if [ -n "$FILENAME" ]; then
  
  declare -a CONFIG
  let i=0

  # Read the configuration file into the array
  while read -r line; do
    # Remove empty lines.
    if [ -n "$line" ]; then
      CONFIG[i]=$line

      # Remove whitespace
      CONFIG[i]=${CONFIG[i]//[[:space:]]}

      # Remove any comments      
      IND=`expr index "${CONFIG[i]}" "#"`
      if [ $IND -gt 1 ]; then
        ((IND--))
        CONFIG[i]=${CONFIG[i]:0:IND}
        ((i++))
      else
        if [ $IND -eq 0 ]; then
          ((i++))
        fi    
      fi
    fi
  done < "$FILENAME"


  # Determine the communication layer type
  # and the extract the host names.
  TYPE=""
  HOSTS=""
  let NUMHOSTS=0

  for ((n=0;n<${#CONFIG[@]};n++)); do
    S=${CONFIG[${n}]}

    if [ "$S" = "PhysicalLayer:MPI" ]; then
      TYPE="MPI"
    fi

    if [ "$S" = "PhysicalLayer:TCPSelect" ]; then
      TYPE="TCP"
    fi

    # Get the host names from the line.
    # The number of hosts can be determined by the 
    # number of commas. 
    #
    # NUMHOST = NumberOfCommas + 2
    # There will be one more remote host than there are
    # commas. There will also be the local host from which
    # this script is run.
    if [[ "$S" == *Nodes:* ]]; then
      POS=`expr index "$S" ":"`
      HOSTS=${S:POS:${#S}}
      TEMP=${HOSTS//[^,]/}
      let NUMHOSTS=${#TEMP}+2
    fi
  done

  # Setup the command line arguement for MPI.
  if [ "$TYPE" = "MPI" ]; then
    HOSTS="localhost,$HOSTS"
    COM="mpirun -np $NUMHOSTS -H $HOSTS $COM"
  fi

  # Setup the command line arguement for TCP.
  # Right now, nothing needs to be setup, the command just needs to be run.
fi

# Run the command.
$COM
