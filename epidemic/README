EPIDEMIC: A WARPED simulation kernel application

Authors: Sounak Gupta, Xinyu Guo and Philip A. Wilsey
Experimental Computing Laboratory
Dept of ECECS, PO Box 210030
Cincinnati, OH  45221--0030

Copyright The University of Cincinnati.  All rights reserved.  

Published by the University of Cincinnati
Dept of ECECS, PO Box 210030
Cincinnati, OH  45221--0030 USA

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions.


Introduction
------------

Details to be added later ( hopefully :) ). Most of the details needed can 
be found in the papers mentioned in the Reference section.

NOTE: It has been assumed that all locations are connected to each other in 
a star topology configuration via a central hub. This has been done to reduce
complexity in design of diffusion network.

Travel time from location 1 to location 2 = 
                     Travel time from location 1 to central hub +
                     Travel time from central hub to location 2


Configuration File
------------------

The model generator program lets the user adjust the following parameters
before writing out the model:

<transmissiblity>
<latent_dwell_time> <latent_infectivity>
<incubating_dwell_time> <incubating_infectivity>
<infectious_dwell_time> <infectious_infectivity>
<asympt_dwell_time> <asympt_infectivity>
<prob_ul_u> <prob_ul_v> <prob_ur_v> <prob_ui_v> <prob_ui_u>
<location_state_refresh_interval>
<number_of_regions>
foreach region 1..<no_of_regions>
	<region_name> <number_of_locations>
	foreach location 1..<no_of_locations>
		<location_name> <number_of_persons> <travel_time_to_central_hub> <diffusion_trigger_interval>
		foreach person 1..<number_of_persons>
			<pid> <susceptibility> <is_vaccinated> <infection_state>
		endfor
	endfor
endfor

Legend:
	Refer to Figure 2 of ref[2] for the disease model
	Transition Probabilities:
		prob_ul_u : uninfected->latent (untreated)
		prob_ul_v : uninfected->latent (vaccinated)
		prob_ur_v : uninfected->recovered (vaccinated)
		prob_ui_v : uninfected->incubating (vaccinated)
		prob_ui_u : uninfected->incubating (untreated)

	Location state refresh interval:
		Intervals at which the disease spread at any location is re-computed


References
----------

1. Kalyan S Perumalla and Sudip K Seal. 2012. Discrete event modeling 
and massively parallel execution of epidemic outbreak phenomena. 
Simulation 88, 7 (July 2012), 768-783.

2. Christopher L. Barrett, Keith R. Bisset, Stephen G. Eubank, Xizhou Feng, 
and Madhav V. Marathe. 2008. EpiSimdemics: an efficient algorithm for 
simulating the spread of infectious disease over large realistic social networks. 
In Proceedings of the 2008 ACM/IEEE conference on Supercomputing (SC '08). 
IEEE Press, Piscataway, NJ, USA, , Article 37 , 12 pages.



